//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EntradaSalidaRRHH.DAL.Modelo
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class NotificadorAtiscodeEntities : DbContext
    {
        public NotificadorAtiscodeEntities()
            : base("name=NotificadorAtiscodeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Notificaciones> Notificaciones { get; set; }
    
        public virtual ObjectResult<NotificacionesInfo> ListadoNotificaciones()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NotificacionesInfo>("ListadoNotificaciones");
        }
    
        public virtual int InsertarNotificacionAtiscode(string nombreTarea, string descripcionTarea, string nombreEmisor, string correoEmisor, string claveCorreo, string correosDestinatarios, string asuntoCorreo, string nombreArchivoPlantillaCorreo, string cuerpoCorreo, string adjuntosCorreo, Nullable<System.DateTime> fechaEnvioCorreo, string detalleEstadoEjecucionNotificacion, string empresa, string canal, string tipo)
        {
            var nombreTareaParameter = nombreTarea != null ?
                new ObjectParameter("NombreTarea", nombreTarea) :
                new ObjectParameter("NombreTarea", typeof(string));
    
            var descripcionTareaParameter = descripcionTarea != null ?
                new ObjectParameter("DescripcionTarea", descripcionTarea) :
                new ObjectParameter("DescripcionTarea", typeof(string));
    
            var nombreEmisorParameter = nombreEmisor != null ?
                new ObjectParameter("NombreEmisor", nombreEmisor) :
                new ObjectParameter("NombreEmisor", typeof(string));
    
            var correoEmisorParameter = correoEmisor != null ?
                new ObjectParameter("CorreoEmisor", correoEmisor) :
                new ObjectParameter("CorreoEmisor", typeof(string));
    
            var claveCorreoParameter = claveCorreo != null ?
                new ObjectParameter("ClaveCorreo", claveCorreo) :
                new ObjectParameter("ClaveCorreo", typeof(string));
    
            var correosDestinatariosParameter = correosDestinatarios != null ?
                new ObjectParameter("CorreosDestinatarios", correosDestinatarios) :
                new ObjectParameter("CorreosDestinatarios", typeof(string));
    
            var asuntoCorreoParameter = asuntoCorreo != null ?
                new ObjectParameter("AsuntoCorreo", asuntoCorreo) :
                new ObjectParameter("AsuntoCorreo", typeof(string));
    
            var nombreArchivoPlantillaCorreoParameter = nombreArchivoPlantillaCorreo != null ?
                new ObjectParameter("NombreArchivoPlantillaCorreo", nombreArchivoPlantillaCorreo) :
                new ObjectParameter("NombreArchivoPlantillaCorreo", typeof(string));
    
            var cuerpoCorreoParameter = cuerpoCorreo != null ?
                new ObjectParameter("CuerpoCorreo", cuerpoCorreo) :
                new ObjectParameter("CuerpoCorreo", typeof(string));
    
            var adjuntosCorreoParameter = adjuntosCorreo != null ?
                new ObjectParameter("AdjuntosCorreo", adjuntosCorreo) :
                new ObjectParameter("AdjuntosCorreo", typeof(string));
    
            var fechaEnvioCorreoParameter = fechaEnvioCorreo.HasValue ?
                new ObjectParameter("FechaEnvioCorreo", fechaEnvioCorreo) :
                new ObjectParameter("FechaEnvioCorreo", typeof(System.DateTime));
    
            var detalleEstadoEjecucionNotificacionParameter = detalleEstadoEjecucionNotificacion != null ?
                new ObjectParameter("DetalleEstadoEjecucionNotificacion", detalleEstadoEjecucionNotificacion) :
                new ObjectParameter("DetalleEstadoEjecucionNotificacion", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var canalParameter = canal != null ?
                new ObjectParameter("Canal", canal) :
                new ObjectParameter("Canal", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertarNotificacionAtiscode", nombreTareaParameter, descripcionTareaParameter, nombreEmisorParameter, correoEmisorParameter, claveCorreoParameter, correosDestinatariosParameter, asuntoCorreoParameter, nombreArchivoPlantillaCorreoParameter, cuerpoCorreoParameter, adjuntosCorreoParameter, fechaEnvioCorreoParameter, detalleEstadoEjecucionNotificacionParameter, empresaParameter, canalParameter, tipoParameter);
        }
    
        public virtual ObjectResult<NotificacionesInfo> ListadoNotificacionesRRHH()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NotificacionesInfo>("ListadoNotificacionesRRHH");
        }
    
        public virtual ObjectResult<OperationResultDB> InsertarNotificacionAtiscodeCatchingResults(string nombreTarea, string descripcionTarea, string nombreEmisor, string correoEmisor, string claveCorreo, string correosDestinatarios, string asuntoCorreo, string nombreArchivoPlantillaCorreo, string cuerpoCorreo, string adjuntosCorreo, Nullable<System.DateTime> fechaEnvioCorreo, string detalleEstadoEjecucionNotificacion, string empresa, string canal, string tipo)
        {
            var nombreTareaParameter = nombreTarea != null ?
                new ObjectParameter("NombreTarea", nombreTarea) :
                new ObjectParameter("NombreTarea", typeof(string));
    
            var descripcionTareaParameter = descripcionTarea != null ?
                new ObjectParameter("DescripcionTarea", descripcionTarea) :
                new ObjectParameter("DescripcionTarea", typeof(string));
    
            var nombreEmisorParameter = nombreEmisor != null ?
                new ObjectParameter("NombreEmisor", nombreEmisor) :
                new ObjectParameter("NombreEmisor", typeof(string));
    
            var correoEmisorParameter = correoEmisor != null ?
                new ObjectParameter("CorreoEmisor", correoEmisor) :
                new ObjectParameter("CorreoEmisor", typeof(string));
    
            var claveCorreoParameter = claveCorreo != null ?
                new ObjectParameter("ClaveCorreo", claveCorreo) :
                new ObjectParameter("ClaveCorreo", typeof(string));
    
            var correosDestinatariosParameter = correosDestinatarios != null ?
                new ObjectParameter("CorreosDestinatarios", correosDestinatarios) :
                new ObjectParameter("CorreosDestinatarios", typeof(string));
    
            var asuntoCorreoParameter = asuntoCorreo != null ?
                new ObjectParameter("AsuntoCorreo", asuntoCorreo) :
                new ObjectParameter("AsuntoCorreo", typeof(string));
    
            var nombreArchivoPlantillaCorreoParameter = nombreArchivoPlantillaCorreo != null ?
                new ObjectParameter("NombreArchivoPlantillaCorreo", nombreArchivoPlantillaCorreo) :
                new ObjectParameter("NombreArchivoPlantillaCorreo", typeof(string));
    
            var cuerpoCorreoParameter = cuerpoCorreo != null ?
                new ObjectParameter("CuerpoCorreo", cuerpoCorreo) :
                new ObjectParameter("CuerpoCorreo", typeof(string));
    
            var adjuntosCorreoParameter = adjuntosCorreo != null ?
                new ObjectParameter("AdjuntosCorreo", adjuntosCorreo) :
                new ObjectParameter("AdjuntosCorreo", typeof(string));
    
            var fechaEnvioCorreoParameter = fechaEnvioCorreo.HasValue ?
                new ObjectParameter("FechaEnvioCorreo", fechaEnvioCorreo) :
                new ObjectParameter("FechaEnvioCorreo", typeof(System.DateTime));
    
            var detalleEstadoEjecucionNotificacionParameter = detalleEstadoEjecucionNotificacion != null ?
                new ObjectParameter("DetalleEstadoEjecucionNotificacion", detalleEstadoEjecucionNotificacion) :
                new ObjectParameter("DetalleEstadoEjecucionNotificacion", typeof(string));
    
            var empresaParameter = empresa != null ?
                new ObjectParameter("Empresa", empresa) :
                new ObjectParameter("Empresa", typeof(string));
    
            var canalParameter = canal != null ?
                new ObjectParameter("Canal", canal) :
                new ObjectParameter("Canal", typeof(string));
    
            var tipoParameter = tipo != null ?
                new ObjectParameter("Tipo", tipo) :
                new ObjectParameter("Tipo", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<OperationResultDB>("InsertarNotificacionAtiscodeCatchingResults", nombreTareaParameter, descripcionTareaParameter, nombreEmisorParameter, correoEmisorParameter, claveCorreoParameter, correosDestinatariosParameter, asuntoCorreoParameter, nombreArchivoPlantillaCorreoParameter, cuerpoCorreoParameter, adjuntosCorreoParameter, fechaEnvioCorreoParameter, detalleEstadoEjecucionNotificacionParameter, empresaParameter, canalParameter, tipoParameter);
        }
    }
}
