@model IEnumerable<DesvinculacionPersonalInfo>
@{
    var acciones = (List<string>)ViewBag.AccionesUsuario;
}
        @(Html
        .Grid(Model)
        .Build(columns =>
        {
            columns.Add(model => model.FechaSalida).Titled("Fecha Salida").RawNamed("FechaSalida").AppendCss("celda-grande");
            columns.Add(model => model.TextoMotivo).Titled("Motivo").RawNamed("TextoMotivo").AppendCss("celda-grande");

            columns.Add(model => model.UsuarioDesvinculado).Titled("Persona Desvinculada").RawNamed("UsuarioDesvinculado").AppendCss("celda-grande");
            columns.Add(model => model.UsuarioResponsableDesvinculacion).Titled("Responsable").RawNamed("UsuarioResponsableDesvinculacion").AppendCss("celda-grande");

            columns.Add(model => model.TextoEstadoSalidaSeguroMedico).Titled("Salida Seguro Médico").RawNamed("TextoEstadoSalidaSeguroMedico").AppendCss("celda-grande");
            columns.Add(model => model.TextoEstadoEncuestaSalida).Titled("Encuesta Salida").RawNamed("TextoEstadoEncuestaSalida").AppendCss("celda-grande");


            columns.Add(model => "<button style='background-color:#00AD8E;border-color: #00AD8E;' class='btn btn-success " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-ACTUALIZAR") + "' onclick='location.href=\"" + @Url.Action("Formulario", "DesvinculacionPersonal", new { id = model.IDDesvinculacionPersonal, usuarioID = model.UsuarioID }) + "\"' id='editar' data-id=\"" + model.IDDesvinculacionPersonal + "\"><span class='glyphicon glyphicon-pencil' aria-hidden='true'></span></button>" +
           " <button title = 'Descargar Desvinculación Personal.' style = 'background-color:#FFC52D;border-color: #FFC52D;' class='btn btn-success " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-DESCARGAR") + "' onclick='DescargarArchivos({id:" + model.IDDesvinculacionPersonal
                     + "},\"" + @Url.Action("GenerarReporte", "DesvinculacionPersonal") + "\" , \"" + @Url.Action("DescargarArchivo", "DesvinculacionPersonal") + "\");' data-id=\"" + model.IDDesvinculacionPersonal + "\"><span class='glyphicon glyphicon-print' aria-hidden='true' style='color:black'></span></button>" +
            "<button title='Eliminar.' onclick='ConfirmarEliminacion_(" + model.IDDesvinculacionPersonal + ",\"" + @Url.Action("Eliminar", "DesvinculacionPersonal") + "\");' background-color:#FF5E00;border-color:#FF5E00;' class='btn btn-danger " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-ELIMINAR") + "' id='eliminar' data-id=\"" + model.IDDesvinculacionPersonal + "\"><span class='glyphicon glyphicon-trash' aria-hidden='true'></span></button>").AppendCss("celda-pequenia").Encoded(false);

        })
        .RowAttributed(model => new { data_id = model.IDDesvinculacionPersonal })
        .Empty(Mensajes.MensajeNoDataListado)
        .Id("grid-DesvinculacionPersonal")
        .UsingProcessingMode(GridProcessingMode.Manual)
        .Pageable(pager =>
        {
            pager.TotalRows = ViewBag.TotalPaginas;
            pager.RowsPerPage = 10;
        })
        .Filterable()
        .Sortable())

