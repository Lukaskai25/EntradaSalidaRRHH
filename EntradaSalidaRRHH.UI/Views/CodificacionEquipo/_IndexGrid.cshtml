@model IEnumerable<CodificacionEquipoInfo>
@{
    var acciones = (List<string>)ViewBag.AccionesUsuario;
}
@(Html
            .Grid(Model)
            .Build(columns =>
            {
                columns.Add(model => model.FechaCodificacionEquipo).Titled("Fecha Codificación").RawNamed("FechaCodificacionEquipo").AppendCss("celda-grande");
                columns.Add(model => model.UsuarioCodificador).Titled("Usuario Responsable o Codificador").RawNamed("UsuarioCodificador").AppendCss("celda-grande");

                columns.Add(model => model.FechaSolicitud).Titled("Fecha Solicitud Requerimiento").RawNamed("FechaSolicitud").AppendCss("celda-grande");
                columns.Add(model => model.NombresSolicitante).Titled("Usuario Solicitante").RawNamed("NombresSolicitante").AppendCss("celda-grande");

                columns.Add(model => model.Equipos).Titled("Equipos").RawNamed("Equipos").AppendCss("celda-grande");
                columns.Add(model => model.HerramientasAdicionales).Titled("Herramientas Adicionales o Accesorios").RawNamed("HerramientasAdicionales").AppendCss("celda-grande");
                columns.Add(model => model.FechaAsignacion).Titled("Fecha de Asignación").RawNamed("FechaAsignacion").AppendCss("celda-grande");
                columns.Add(model => model.CredencialAcceso).Titled("Credenciales de Acceso").RawNamed("CredencialAcceso").AppendCss("celda-grande");

                columns.Add(model => "<button style='background-color:#00AD8E;border-color: #00AD8E;' class='btn btn-success " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-ACTUALIZAR") + "' onclick='location.href=\"" + @Url.Action("Formulario", "CodificacionEquipo", new { id = model.IDCodificacionEquipo, requerimientoID = model.RequerimientoEquipoID }) + "\"' id='editar' data-id=\"" + model.IDCodificacionEquipo + "\"><span class='glyphicon glyphicon-pencil' aria-hidden='true'></span></button>" +
               " <button title = 'Descargar Codificación Equipo.' style = 'background-color:#FFC52D;border-color: #FFC52D;' class='btn btn-success " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-DESCARGAR") + "' onclick='DescargarArchivos({id:" + model.IDCodificacionEquipo + "},\"" + @Url.Action("GenerarReporte", "CodificacionEquipo") + "\" , \"" + @Url.Action("DescargarArchivo", "CodificacionEquipo") + "\");' data-id=\"" + model.IDCodificacionEquipo + "\"><span class='glyphicon glyphicon-print' aria-hidden='true' style='color:black'></span></button>" +
              " <button title='Eliminar.' onclick='ConfirmarEliminacion_(" + model.IDCodificacionEquipo + ",\"" + @Url.Action("Eliminar", "CodificacionEquipo") + "\");' background-color:#FF5E00;border-color:#FF5E00;' class='btn btn-danger " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-ELIMINAR") + "' id='eliminar' data-id=\"" + model.IDCodificacionEquipo + "\"><span class='glyphicon glyphicon-trash' aria-hidden='true'></span></button>").AppendCss("celda-pequenia").Encoded(false);

            })
            .RowAttributed(model => new { data_id = model.IDCodificacionEquipo })
            .Empty(Mensajes.MensajeNoDataListado)
            .Id("grid-CodificacionEquipo")
            .UsingProcessingMode(GridProcessingMode.Manual)
            .Pageable(pager =>
            {
                pager.TotalRows = ViewBag.TotalPaginas;
                pager.RowsPerPage = 10;
            })
            .Filterable()
            .Sortable())
