@model IEnumerable<AsignacionEquipoInfo>
@{
    var acciones = (List<string>)ViewBag.AccionesUsuario;
}
@(Html
        .Grid(Model)
        .Build(columns =>
        {
            columns.Add(model => model.FechaSolicitud).Titled("Fecha Solicitud").RawNamed("FechaSolicitud").AppendCss("celda-grande");
            columns.Add(model => model.NombresApellidos).Titled("Usuario").RawNamed("NombresApellidos").AppendCss("celda-grande");

            columns.Add(model => model.Equipos).Titled("Equipos").RawNamed("Equipos").AppendCss("celda-grande");
            columns.Add(model => model.HerramientasAdicionales).Titled("Herramientas Adicionales").RawNamed("HerramientasAdicionales").AppendCss("celda-grande");

            columns.Add(model => model.NombreEmpresa).Titled("Empresa").RawNamed("Empresa").AppendCss("celda-grande");
            columns.Add(model => model.TextoCatalogoCargo).Titled("Cargo").RawNamed("Cargo").AppendCss("celda-grande");
            columns.Add(model => model.TextoCatalogoDepartamento).Titled("Departamento").RawNamed("Departamento").AppendCss("celda-grande");
            columns.Add(model => model.TextoAsignadoRequerimientoEquipo).Titled("Asignación").RawNamed("TextoAsignadoRequerimientoEquipo").AppendCss("celda-grande");

            columns.Add(model =>
            "<button style='background-color:#00AD8E;border-color: #00AD8E;' class='btn btn-success  " + ControlPermisos.GestionBontonesGrid(acciones, "ACCIONES-SIST-ASIGNAR-REQ") + " ' onclick='location.href=\"" + @Url.Action("GestionarAsignacion", "AsignacionEquipo", new { id = model.IDRequerimientoEquipo }) + "\"' id='editar' data-id=\"" + model.IDRequerimientoEquipo + "\"><span class='glyphicon glyphicon-pencil' aria-hidden='true'></span></button>"
            ).AppendCss("celda-pequenia").Encoded(false);

        })
        .RowAttributed(model => new { data_id = model.IDRequerimientoEquipo })
        .Empty(Mensajes.MensajeNoDataListado)
        .Id("grid-AsignacionEquipo")
        .UsingProcessingMode(GridProcessingMode.Manual)
        .Pageable(pager =>
        {
            pager.TotalRows = ViewBag.TotalPaginas;
            pager.RowsPerPage = 10;
        })
        .Filterable()
        .Sortable())






